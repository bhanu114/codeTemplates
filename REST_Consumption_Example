public class ValidateAddressesREST {
    public class Address {
        public String id;
        public String line1;
        public String line2;
        public String city;
        public String state;
        public String country;
        public String zipCode;
    }
    
    public class Result {
        public Boolean isValid;
        public List<resultDifference> differences;
        public Address testAddress;
        public Address validAddress;
    }
    
    public class ResultDifference {
        public String expecting;
        public String fieldName;
        public String received;
    }
    
    public List<Result> ValidateAddresses(List<ValidateAddressesREST.Address> listAddress) {
        List<Result> output = null;
        HTTP http = new HTTP(); 
        String endpoint = 'callout:HerokuWebService/rest/validateMultipleAddress';

        //TODOs: 
        // 1. Construct an HTTPRequest object using the default constructor and assign it to a variable 
        //    called req of type HTTPRequest.
		HTTPRequest req = new HTTPRequest();
		
        // 2. Using the appropriate setter method, set the endpoint on the request to the value of the
        //    variable "endpoint"
        req.setEndpoint(endpoint);
        // 3. Using the appropriate setter method, set the HTTP method of the request to POST.
        req.setMethod('POST');
        // 4. Using the setHeader method on the request, add the key-value pair "Accept", "application/json".
       	req.setHeader('Accept', 'application/json');
        // 5. Using the setHeader method on the request, add the key-value pair "Content-Type","application/json".
        req.setHeader('Content-Type', 'application/json');
        // 6. Using the appropriate setter method, set the body on the request to the result of using the static
        //    serialize method of the Apex JSON class on the "listAddress" variable.
        req.setBody(JSON.serialize(listAddress));
        // 7. Add a call to the System debug method to display the request body.
        System.debug('Request Body = ' + req.getBody());
        // 8. Invoke the send method of the HTTP class on the variable "http" passing in the request object
        //    and store the result in an HTTPResponse object called "resp". 
        HttpResponse resp = http.send(req);

        if (resp.getStatusCode() == 200) { // 200 is the "good" status code
            System.debug('Response: ' + resp.getBody());
            output = (List<Result>) JSON.deserialize(resp.getBody(), List<Result>.class);
        } else {
            // Handle HTTP Error
            Error_Log__c log = new Error_Log__c();
            log.trace__c = '';
            log.trace__c += 'Error: ' + resp.getStatusCode() + ' while connecting to: ' + endpoint + '\r\n';
            log.trace__c += resp.getStatus() + '\r\n';
            log.trace__c += resp.getBody() + '\r\n';
            insert log;
        }
        return output;
    }
}
